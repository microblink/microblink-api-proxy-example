##
# Self-hosted API proxy application
#
# This nginx configuration will do the following:
#
# - Add CORS headers to response
# - Forward all requests from port 443 to Self-hosted API

daemon            off;
worker_processes  2;

# Uncomment and set user and group used by worker process, see http://nginx.org/en/docs/ngx_core_module.html#user
#user              www-data;

events {
    # Uncomment if used on Linux 2.6+, see http://nginx.org/en/docs/events.html
    #use           epoll;
    worker_connections  128;
}

error_log         logs/error.log info;

http {
    server_tokens off;
    include       mime.types;
    charset       utf-8;

    access_log    logs/access.log  combined;

    # HTTPS only: redirect HTTP requests
    server {
        server_name     http.api.proxy;
        listen          80;
        return 301 https://$host$request_uri;
    }

    server {
        server_name     https.api.proxy;

        # In case of HTTP, change the value to `80`
        listen          443 ssl;

        # HTTPS only: set SSL certificate
        ssl_certificate     /path/to/certificate.pem;
        ssl_certificate_key /path/to/private-key.pem;

        location      / {
            ##
            # CORS configuration
            #
            # - Based on https://enable-cors.org/server_nginx.html
            # - For information about origin header see article on MDN
            #   https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin

            if ($request_method = 'OPTIONS') {
                # Replace 'https://example.com' with location of client application
                add_header 'Access-Control-Allow-Origin' 'https://example.com';

                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;

                return 204;
            }
            if ($request_method = 'POST') {
                # Replace 'https://example.com' with location of client application
                add_header 'Access-Control-Allow-Origin' 'https://example.com';

                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                # Replace 'https://example.com' with location of client application
                add_header 'Access-Control-Allow-Origin' 'https://example.com';

                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }

            # Replace value in proxy_pass with production endpoint of your Self-hosted API
            proxy_pass          http://localhost;

            # Remove CORS headers from Self-hosted API since they're handled in this configuration
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
        }
    }
}